<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.csi.dao.OdMapper" >
  <resultMap id="BaseResultMap" type="com.csi.model.Od" >
    <id column="odId" property="odid" jdbcType="INTEGER" />
    <result column="oId" property="oid" jdbcType="INTEGER" />
    <result column="mealId" property="mealid" jdbcType="INTEGER" />
    <result column="mealPrice" property="mealprice" jdbcType="DOUBLE" />
    <result column="mealCount" property="mealcount" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    odId, oId, mealId, mealPrice, mealCount
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.csi.model.OdExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from od
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from od
    where odId = #{odid,jdbcType=INTEGER}
  </select>
  <select id="selectbyoid" resultMap="BaseResultMap" parameterType="java.lang.Integer">
  	select * from od where oId=#{oid}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from od
    where odId = #{odid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.csi.model.OdExample" >
    delete from od
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.csi.model.Od" >
    insert into od (odId, oId, mealId, 
      mealPrice, mealCount)
    values (#{odid,jdbcType=INTEGER}, #{oid,jdbcType=INTEGER}, #{mealid,jdbcType=INTEGER}, 
      #{mealprice,jdbcType=DOUBLE}, #{mealcount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.csi.model.Od" >
    insert into od
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="odid != null" >
        odId,
      </if>
      <if test="oid != null" >
        oId,
      </if>
      <if test="mealid != null" >
        mealId,
      </if>
      <if test="mealprice != null" >
        mealPrice,
      </if>
      <if test="mealcount != null" >
        mealCount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="odid != null" >
        #{odid,jdbcType=INTEGER},
      </if>
      <if test="oid != null" >
        #{oid,jdbcType=INTEGER},
      </if>
      <if test="mealid != null" >
        #{mealid,jdbcType=INTEGER},
      </if>
      <if test="mealprice != null" >
        #{mealprice,jdbcType=DOUBLE},
      </if>
      <if test="mealcount != null" >
        #{mealcount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.csi.model.OdExample" resultType="java.lang.Integer" >
    select count(*) from od
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update od
    <set >
      <if test="record.odid != null" >
        odId = #{record.odid,jdbcType=INTEGER},
      </if>
      <if test="record.oid != null" >
        oId = #{record.oid,jdbcType=INTEGER},
      </if>
      <if test="record.mealid != null" >
        mealId = #{record.mealid,jdbcType=INTEGER},
      </if>
      <if test="record.mealprice != null" >
        mealPrice = #{record.mealprice,jdbcType=DOUBLE},
      </if>
      <if test="record.mealcount != null" >
        mealCount = #{record.mealcount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update od
    set odId = #{record.odid,jdbcType=INTEGER},
      oId = #{record.oid,jdbcType=INTEGER},
      mealId = #{record.mealid,jdbcType=INTEGER},
      mealPrice = #{record.mealprice,jdbcType=DOUBLE},
      mealCount = #{record.mealcount,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.csi.model.Od" >
    update od
    <set >
      <if test="oid != null" >
        oId = #{oid,jdbcType=INTEGER},
      </if>
      <if test="mealid != null" >
        mealId = #{mealid,jdbcType=INTEGER},
      </if>
      <if test="mealprice != null" >
        mealPrice = #{mealprice,jdbcType=DOUBLE},
      </if>
      <if test="mealcount != null" >
        mealCount = #{mealcount,jdbcType=INTEGER},
      </if>
    </set>
    where odId = #{odid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.csi.model.Od" >
    update od
    set oId = #{oid,jdbcType=INTEGER},
      mealId = #{mealid,jdbcType=INTEGER},
      mealPrice = #{mealprice,jdbcType=DOUBLE},
      mealCount = #{mealcount,jdbcType=INTEGER}
    where odId = #{odid,jdbcType=INTEGER}
  </update>
</mapper>